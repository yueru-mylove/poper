<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sport.peking.poper.mapper.JadeMapper">
  <resultMap id="BaseResultMap" type="com.sport.peking.poper.bean.Jade">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="born" jdbcType="VARCHAR" property="born" />
    <result column="inch" jdbcType="VARCHAR" property="inch" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="material" jdbcType="VARCHAR" property="material" />
    <result column="number" jdbcType="INTEGER" property="number" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, source, born, inch, value, material, number
  </sql>
  <select id="selectByExample" parameterType="com.sport.peking.poper.bean.JadeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from jade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from jade
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from jade
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sport.peking.poper.bean.JadeExample">
    delete from jade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sport.peking.poper.bean.Jade">
    insert into jade (id, name, source, 
      born, inch, value, 
      material, number)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{source,jdbcType=VARCHAR}, 
      #{born,jdbcType=VARCHAR}, #{inch,jdbcType=VARCHAR}, #{value,jdbcType=VARCHAR}, 
      #{material,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sport.peking.poper.bean.Jade">
    insert into jade
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="born != null">
        born,
      </if>
      <if test="inch != null">
        inch,
      </if>
      <if test="value != null">
        value,
      </if>
      <if test="material != null">
        material,
      </if>
      <if test="number != null">
        number,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="born != null">
        #{born,jdbcType=VARCHAR},
      </if>
      <if test="inch != null">
        #{inch,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="material != null">
        #{material,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sport.peking.poper.bean.JadeExample" resultType="java.lang.Long">
    select count(*) from jade
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update jade
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=VARCHAR},
      </if>
      <if test="record.born != null">
        born = #{record.born,jdbcType=VARCHAR},
      </if>
      <if test="record.inch != null">
        inch = #{record.inch,jdbcType=VARCHAR},
      </if>
      <if test="record.value != null">
        value = #{record.value,jdbcType=VARCHAR},
      </if>
      <if test="record.material != null">
        material = #{record.material,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update jade
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=VARCHAR},
      born = #{record.born,jdbcType=VARCHAR},
      inch = #{record.inch,jdbcType=VARCHAR},
      value = #{record.value,jdbcType=VARCHAR},
      material = #{record.material,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sport.peking.poper.bean.Jade">
    update jade
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        source = #{source,jdbcType=VARCHAR},
      </if>
      <if test="born != null">
        born = #{born,jdbcType=VARCHAR},
      </if>
      <if test="inch != null">
        inch = #{inch,jdbcType=VARCHAR},
      </if>
      <if test="value != null">
        value = #{value,jdbcType=VARCHAR},
      </if>
      <if test="material != null">
        material = #{material,jdbcType=VARCHAR},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sport.peking.poper.bean.Jade">
    update jade
    set name = #{name,jdbcType=VARCHAR},
      source = #{source,jdbcType=VARCHAR},
      born = #{born,jdbcType=VARCHAR},
      inch = #{inch,jdbcType=VARCHAR},
      value = #{value,jdbcType=VARCHAR},
      material = #{material,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>